ggThemeAssist:::ggThemeAssistAddin()
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = CAR_TYPE)) +
geom_bar(width = 0.5) + theme_bw() +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.75)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.75)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.77)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
ggThemeAssist:::ggThemeAssistAddin()
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5, stat = "identity") + theme_bw() + scale_fill_discrete(name = "Car Type") +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count') +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..)) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 2.0) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.0) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 4.0) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.5) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the SEX column
training$SEX <- gsub("z_", "", training$SEX)
# plot the gender distribution
car_crash_gender <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(SEX),
fill = as.factor(SEX))) +
geom_bar(width = 0.5) + theme_bw() +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
scale_fill_manual("Gender", values = c("F" = "#FF66CC", "M" = "#87CEEB")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Gender",
x = "Gender", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_gender
# clean the SEX column
training$SEX <- gsub("z_", "", training$SEX)
# plot the gender distribution
car_crash_gender <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(SEX),
fill = as.factor(SEX))) +
geom_bar(width = 0.5) + theme_bw() +
scale_fill_manual("Gender", values = c("F" = "#FF66CC", "M" = "#87CEEB")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Gender",
x = "Gender", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_gender
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# clean the SEX column
training$SEX <- gsub("z_", "", training$SEX)
# plot the gender distribution
car_crash_gender <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(SEX),
fill = as.factor(SEX))) +
geom_bar(width = 0.5) + theme_bw() +
scale_fill_manual("Gender", values = c("F" = "#FF66CC", "M" = "#87CEEB")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Gender",
x = "Gender", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_gender
# plot a bar chart to show the distribution of car crash
target_flag <- training %>% ggplot(aes(x = as.factor(TARGET_FLAG), fill = as.factor(TARGET_FLAG))) +
geom_bar(width = 0.5) + theme_bw() +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
scale_fill_manual("Was in Crash?", values = c("0" = "#3CB371", "1" = "#FF5349")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Was Car in a car crash? 1=Yes, 0 = No",
x = "Target Flag", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.92, 0.85)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
# display the chart
target_flag
# clean the SEX column
training$SEX <- gsub("z_", "", training$SEX)
# plot the gender distribution
car_crash_gender <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(SEX),
fill = as.factor(SEX))) +
geom_bar(width = 0.5) + theme_bw() +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
scale_fill_manual("Gender", values = c("F" = "#FF66CC", "M" = "#87CEEB")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Gender",
x = "Gender", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_gender
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Amelia)
library(naniar)
library(visdat)
library(cowplot)
library(corrplot)
library(kableExtra)
library(Hmisc)
url_train <- "https://raw.githubusercontent.com/chinedu2301/data621-business-analytics-data-mining/main/assignments/assignment4/insurance_training_data.csv"
url_eval <- "https://raw.githubusercontent.com/chinedu2301/data621-business-analytics-data-mining/main/assignments/assignment4/insurance-evaluation-data.csv"
training <- read_csv(url_train)
evaluation <- read_csv(url_eval)
head(training, 10)
dim(training)
glimpse(training)
summary(training) %>% kbl() %>% kable_styling()
# plot a bar chart to show the distribution of car crash
target_flag <- training %>% ggplot(aes(x = as.factor(TARGET_FLAG), fill = as.factor(TARGET_FLAG))) +
geom_bar(width = 0.5) + theme_bw() +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
scale_fill_manual("Was in Crash?", values = c("0" = "#3CB371", "1" = "#FF5349")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Was Car in a car crash? 1=Yes, 0 = No",
x = "Target Flag", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.92, 0.85)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
# display the chart
target_flag
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Amelia)
library(naniar)
library(visdat)
library(cowplot)
library(corrplot)
library(kableExtra)
library(Hmisc)
url_train <- "https://raw.githubusercontent.com/chinedu2301/data621-business-analytics-data-mining/main/assignments/assignment4/insurance_training_data.csv"
url_eval <- "https://raw.githubusercontent.com/chinedu2301/data621-business-analytics-data-mining/main/assignments/assignment4/insurance-evaluation-data.csv"
training <- read_csv(url_train)
evaluation <- read_csv(url_eval)
head(training, 10)
dim(training)
glimpse(training)
summary(training) %>% kbl() %>% kable_styling()
# plot a bar chart to show the distribution of car crash
target_flag <- training %>% ggplot(aes(x = as.factor(TARGET_FLAG), fill = as.factor(TARGET_FLAG))) +
geom_bar(width = 0.5) + theme_bw() +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
scale_fill_manual("Was in Crash?", values = c("0" = "#3CB371", "1" = "#FF5349")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Was Car in a car crash? 1=Yes, 0 = No",
x = "Target Flag", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.92, 0.85)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
# display the chart
target_flag
# clean the SEX column
training$SEX <- gsub("z_", "", training$SEX)
# plot the gender distribution
car_crash_gender <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(SEX),
fill = as.factor(SEX))) +
geom_bar(width = 0.5) + theme_bw() +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
scale_fill_manual("Gender", values = c("F" = "#FF66CC", "M" = "#87CEEB")) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Gender",
x = "Gender", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_gender
# plot the age distribution of individuals involved in a crash
age_crash <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = AGE)) +
geom_histogram(binwidth = 2, fill = "#FF5349") + theme_bw() +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +
labs(title = "Age Distribution - Car crash",
x = "Age", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
# plot the age distribution of individuals not involved in a crash
age_no_crash <- training %>% filter(TARGET_FLAG == 0) %>% ggplot(aes(x = AGE)) +
geom_histogram(binwidth = 2, fill = "#3CB371") + theme_bw() +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +
labs(title = "Age Distribution - No Car crash",
x = "Age", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.95, 0.86)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
# display the plots
plot_grid(age_no_crash, age_crash)
# clean the CAR_TYPE column
training$CAR_TYPE <- gsub("z_", "", training$CAR_TYPE)
# plot the gender distribution
car_crash_car_type <- training %>% filter(TARGET_FLAG == 1) %>% ggplot(aes(x = as.factor(CAR_TYPE),
fill = as.factor(CAR_TYPE))) +
geom_bar(width = 0.5) + theme_bw() + scale_fill_discrete(name = "Car Type") +
geom_text(stat = 'count', aes(label = ..count..), vjust = 1, color = "white", size = 3.2) +
theme(panel.grid.major = element_line(colour = "khaki2",
linetype = "blank"), plot.title = element_text(face = "bold",
hjust = 0.5), panel.background = element_rect(fill = "lightgoldenrodyellow"),
plot.background = element_rect(fill = "antiquewhite")) +labs(title = "Car crash by Car Type",
x = "Car Type", y = NULL) + theme(panel.grid.minor = element_line(linetype = "blank"),
plot.title = element_text(face = "plain"),
legend.title = element_text(size = 7),
legend.position = c(0.91, 0.76)) + theme(panel.grid.major = element_line(size = 0.2,
linetype = "solid"))
car_crash_car_type
# check for NA values using the missmap function from Amelia package
missmap(training, main = "Insurance Training Dataset - Missing Values",
col = c("yellow", "black"), margins = c(8,5))
# visualize missing values and the percentage of missingness for each column
training %>% select(-INDEX) %>% vis_miss(sort_miss = TRUE)
# visualize the missing values and their data type using vis_dat
vis_dat(training)
# Create a function to remove "$", "," and convert to numeric
clean_money = function(in_col) {
# this function accepts a currency column and removes any occurrence of "$" and "," and converts it to numeric
remove_dollar_sign = gsub("\\$", "", in_col)
remove_comma = gsub(",", "", remove_dollar_sign)
out_col <- as.numeric(remove_comma)
return(out_col)
}
# Create a function to remove "z_" and "<"
remove_z = function(in_col){
# this function accepts a column and removes any occurrence of the strings "z_" or "<" from the column
rem_z <- gsub("z_", "", in_col)
out_col <- gsub("<", "", rem_z)
return (out_col)
}
# apply the cleaning functions to the applicable columns in the training dataset
training <- training %>% mutate_at(c("INCOME","HOME_VAL","BLUEBOOK","OLDCLAIM"), clean_money) %>%
mutate_at(c("EDUCATION","JOB","CAR_TYPE","URBANICITY", "MSTATUS"), remove_z)
head(training, 10)
# select only numeric columns excluding the INDEX column
corr_data <- select_if(training, is.numeric) %>%  select(-INDEX)
# get the correlation
training_corr = corr_data %>% cor(corr_data, use = "na.or.complete" )
# define the color pallete to use in the correlation plot
col <- colorRampPalette(c("#4477AA", "#77AADD", "#FFFFFF", "#EE9988", "#BB4444"))
# get the matrix of p_values using the rcorr function from the Hmisc package
p_mat <- rcorr(as.matrix(corr_data))$P
# correlation plot
corrplot(training_corr, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
number.cex = 0.6,
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p_mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
# data preparation
